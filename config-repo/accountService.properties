security.basic.enabled=false
server.port=9001

management.context-path=/manage
management.security.enabled=false
#endpoints.env.id=env
#endpoints.env.sensitive=true
#endpoints.env.enabled=true
endpoints.env.keys-to-sanitize=pwd,uid,password,secret,key,client_id,client_key # suffix or regex
#endpoints.health.id=health
#endpoints.health.sensitive=true
#endpoints.health.enabled=true
#endpoints.health.mapping.*= # mapping of health statuses to HttpStatus codes
#endpoints.health.time-to-live=1000
#endpoints.info.id=info
#endpoints.info.sensitive=false
#endpoints.info.enabled=true

logging.level.io.pivotal.sfdc = DEBUG
#eureka.client.serviceUrl.defaultZone = http://${vcap.services.eureka-service.credentials.uri:localhost:8761}/eureka/
#eureka.client.registerWithEureka = true
#eureka.client.fetchRegistry = true
#eureka.client.registryFetchIntervalSeconds = 10
eureka.instance.hostname = ${vcap.application.uris[0]:localhost}
eureka.instance.nonSecurePort=80
eureka.instance.metadataMap.instanceId = ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
#eureka.instance.leaseRenewalIntervalInSeconds = 30
eureka.instance.statusPageUrlPath = ${management.context-path}/health
eureka.instance.healthCheckUrlPath = ${management.context-path}/health

sfdc.authservice.endpoint = http://authservice

sfdc.query.accounts = select account.id, account.name, account.type, (select contact.id, contact.lastname from account.contacts) from account
sfdc.query.opp_by_accts = select account.id, account.name, account.type, (select opportunity.id, opportunity.name, opportunity.type, opportunity.amount, opportunity.stagename, opportunity.closedate from account.opportunities) from account
