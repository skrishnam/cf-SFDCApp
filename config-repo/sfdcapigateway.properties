security.basic.enabled=false
server.port=9011

#management.context-path=/manage
#management.security.enabled=false
#endpoints.env.id=env
#endpoints.env.sensitive=true
#endpoints.env.enabled=true
#endpoints.env.keys-to-sanitize=pwd,uid,password,secret,key # suffix or regex
#endpoints.health.id=health
#endpoints.health.sensitive=true
#endpoints.health.enabled=true
#endpoints.health.mapping.*= # mapping of health statuses to HttpStatus codes
#endpoints.health.time-to-live=1000
#endpoints.info.id=info
#endpoints.info.sensitive=false
#endpoints.info.enabled=true

logging.level.io.pivotal.sfdc = DEBUG
eureka.client.serviceUrl.defaultZone = ${vcap.services.eureka-service.credentials.uri:http://localhost:8761}/eureka/
#eureka.client.registerWithEureka = true
#eureka.client.fetchRegistry = true
#eureka.client.registryFetchIntervalSeconds = 10
eureka.instance.hostname = ${vcap.application.uris[0]:localhost}
eureka.instance.nonSecurePort=80
eureka.instance.metadataMap.instanceId = ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
#eureka.instance.leaseRenewalIntervalInSeconds = 30
eureka.instance.statusPageUrlPath = ${management.context-path}/health
eureka.instance.healthCheckUrlPath = ${management.context-path}/health

zuul.routes.authservice = /authservice/**
zuul.routes.accountservice = /accountservice/**
zuul.routes.contactservice = /contactservice/**
zuul.routes.opportunityservice = /opportunityservice/**
