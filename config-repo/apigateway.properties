localResourcesDir=${project.basedir}/src/main/resources
loggerNamePrefix=io.pivotal.sfdc.apigateway.jsmodule.
baseApiPath=api
applicationId=${project.artifactId}

security.basic.enabled=false
server.port=9005

management.context-path=/manage
management.security.enabled=false
endpoints.env.id=env
endpoints.env.sensitive=true
endpoints.env.enabled=true
endpoints.env.keys-to-sanitize=pwd,uid,password,secret,key # suffix or regex
endpoints.health.id=health
endpoints.health.sensitive=true
endpoints.health.enabled=true
endpoints.health.mapping.*= # mapping of health statuses to HttpStatus codes
endpoints.health.time-to-live=1000
endpoints.info.id=info
endpoints.info.sensitive=false
endpoints.info.enabled=true

logging.level.io.pivotal.sfdc = INFO
eureka.client.serviceUrl.defaultZone = http://${vcap.services.eureka-service.credentials.uri:localhost:8761}/eureka/
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.registryFetchIntervalSeconds = 10
eureka.instance.hostname = ${vcap.application.uris[0]:localhost}
eureka.instance.metadataMap.instanceId = ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
eureka.instance.leaseRenewalIntervalInSeconds = 30
eureka.instance.statusPageUrlPath = ${management.context-path}/info
eureka.instance.healthCheckUrlPath = ${management.context-path}/health

sfdc.authservice.endpoint = http://authservice
sfdc.accountservice.endpoint = http://accountservice
sfdc.contactservice.endpoint = http://contactservice
sfdc.opportunityservice.endpoint = http://opportunityservice

sfdc.service.unavailable = {\"status\":503,\"data\": \"Service currently unavailable.\"}
sfdc.service.unauthorize = {\"status\":401,\"data\": \"You are not authorized to access this resource.\"}
